1. git --version (Check git version )

Example - C:\windows\system32>git --version
git version 2.33.0.windows.2

2. git init (make empty directory into a git repository(local repo)) 

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git init
Initialized empty Git repository in C:/Users/Yogesh.HB/GithubPractice/myfirstgitrepo/.git/ 

3. git add - adds files to staging area
   git add . - adds all the files in the directory to staging area

example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git add pythoncode.py

C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git add .


4. git commit  - to record changes made to your files

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git commit -m "first commit"
[master (root-commit) 0a9b0ce] first commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 pythoncode.py

5. git status - gives info about files which are not committed in the staging area etc..

Example1 - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git status
On branch master
nothing to commit, working tree clean

Example2 - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   pythoncode.py
        new file:   welcome.py

6. git config - used to set username and email of user committing changes to repo

Example1 - To set config at repo level 
C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git config username "Yogesh"
C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git config email "Yogesh.hb@shell.com"

Example2 - To set config at global level 
C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git config --global username "Yogesh"
C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git config --global email Yogesh.hb@shell.com


7. git branch - to list the available branches in git repo

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git branch
* master

8. git branch branch_name - to create new branch 

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git branch new_feature

	C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git branch
	* master
 	 new_feature


9. git checkout branch_name - to switch from master branch to new branch

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git checkout new_feature
Switched to branch 'new_feature'
M       pythoncode.py
A       welcome.py

C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git status
On branch new_feature
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   pythoncode.py
        new file:   welcome.py


C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git commit -m "committing to new branch"
[new_feature f7e3206] committing to new branch
 2 files changed, 9 insertions(+)
 create mode 100644 welcome.py


10. git merge file_name (to merge feature branch into master)

C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git checkout master
Switched to branch 'master'

C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git branch
* master
  new_feature

C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git merge new_feature
Updating 0a9b0ce..f7e3206
Fast-forward
 pythoncode.py | 9 +++++++++
 welcome.py    | 0
 2 files changed, 9 insertions(+)
 create mode 100644 welcome.py


11. git branch -d branch_name (to delete any branch)

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git branch -d new_feature
Deleted branch new_feature (was f7e3206).

12. git remote add origin <ssh link> (Connect local repo to Github remote repo)

Example - C:\Users\Yogesh.HB\GithubPractice\myfirstgitrepo>git remote add origin git@github.com:yogeshyhb/Git-Commands.git

13. git clone <ssh path> - cloning remote repo as working directory

C:\Users\Yogesh.HB\GithubPractice>git clone git@github.com:yogeshyhb/Git-Commands.git
Cloning into 'Git-Commands'...
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (6/6), done.

14. git pull origin <branch_name> (Pull changes from gitrepo)

Example - C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git branch
* main

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git pull origin main
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 887 bytes | 46.00 KiB/s, done.
From github.com:yogeshyhb/Git-Commands
 * branch            main       -> FETCH_HEAD
   a44b0c8..20ab764  main       -> origin/main
Updating a44b0c8..20ab764
Fast-forward
 Basic Commands.txt | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)
 
 C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git pull origin main
remote: Enumerating objects: 8, done.
remote: Counting objects: 100% (8/8), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 6 (delta 2), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), 1.66 KiB | 60.00 KiB/s, done.
From github.com:yogeshyhb/Git-Commands
 * branch            main       -> FETCH_HEAD
   20ab764..bc9eb4d  main       -> origin/main
Updating 20ab764..bc9eb4d
Fast-forward
 Basic Commands.txt | 21 ++++++++++++++++++++-
 testpull.txt       |  1 +
 2 files changed, 21 insertions(+), 1 deletion(-)
 create mode 100644 testpull.txt

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>dir
 Volume in drive C is Local Disk
 Volume Serial Number is 1617-BF7A

 Directory of C:\Users\Yogesh.HB\GithubPractice\Git-Commands

01/08/2022  05:08 PM    <DIR>          .
01/08/2022  05:08 PM    <DIR>          ..
01/08/2022  05:08 PM             5,022 Basic Commands.txt
01/08/2022  05:01 PM                50 README.md
01/08/2022  05:08 PM                46 testpull.txt
               3 File(s)          5,118 bytes
               2 Dir(s)  162,461,114,368 bytes free
 
 15.  (Push changes to remote repo)
 
 C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git add .

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   testpush.txt


C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git commit -m "test push request"
[main 9a81df2] test push request
 1 file changed, 1 insertion(+)
 create mode 100644 testpush.txt
 
 C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 304 bytes | 152.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To github.com:yogeshyhb/Git-Commands.git
   bc9eb4d..9a81df2  main -> main

Other commands
=============================================================
16. git slash (To save changes made when they are not in a state to commit to a repo)

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git add .

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   Basic Commands.txt
        new file:   stashtest.txt


C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git stash -u
Saved working directory and index state WIP on main: c15dee0 Update Basic Commands.txt

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git stash apply
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   stashtest.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Basic Commands.txt


C:\Users\Yogesh.HB\GithubPractice\Git-Commands>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   stashtest.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Basic Commands.txt


17. git log (This helps give context and history for a repo)


18. git rebase (Takes a set of commits, copies them and stores them outside your repo)


19. git revert (It helps you to roll back to the previous version of the file)



